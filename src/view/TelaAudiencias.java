/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.formdev.flatlaf.FlatDarculaLaf;
import controller.AudienciasController;
import tools.Validacao;
import db.Conexao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.UIManager;
import model.Audiencias;
import tools.CaixaDeDialogo;
import tools.Combo;

/**
 *
 * @author kelwin.rodrigues
 */
public class TelaAudiencias extends javax.swing.JFrame {
           AudienciasController objAudienciasController;
            Combo comboProcesso;
            Combo comboSala;
            Combo comboStatus;
            Combo comboEvento;
                    
    /**
     * Creates new form TelaUsuarios
     */
    public TelaAudiencias() {
        initComponents();
        
        
        try{ 
         comboProcesso = new Combo(jcbProcesso);
        comboProcesso.preencheCombo("SELECT id, num FROM processo ORDER BY id");
        
         comboStatus = new Combo(jcbStatus);
       comboStatus.preencheCombo("SELECT id, status FROM status ORDER BY status");
       
           comboEvento = new Combo(jcbEvento);
          comboEvento.preencheCombo("SELECT id, evento FROM eventos ORDER BY evento");
        
        comboSala = new Combo(jcbSala);
        comboSala.preencheCombo("SELECT id, nome FROM sala ORDER BY nome");
        
        
       }catch(SQLException ex){
           CaixaDeDialogo.obterinstancia().exibirMensagem("Erro no init");
       }
        
          atualizarTabela();
          limparTela();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        jcbProcesso = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jblSalvar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbAudiencias = new javax.swing.JTable();
        jftData = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jcbSala = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jcbEvento = new javax.swing.JComboBox<>();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de AudiÃªncia", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        lbNome.setText("Data");

        btnLimpar.setText("LIMPAR");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        jcbProcesso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Processo");

        jblSalvar.setText("SALVAR");
        jblSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jblSalvarActionPerformed(evt);
            }
        });

        lblId.setText("ID");

        jtbAudiencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbAudiencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtbAudienciasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtbAudiencias);

        try {
            jftData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel2.setText("Sala");

        jcbSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Status");

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Evento");

        jcbEvento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbProcesso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblId))
                    .addComponent(jcbSala, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbEvento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jblSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLimpar))
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jftData, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbNome))
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jftData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jblSalvar)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(441, 639));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jblSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jblSalvarActionPerformed
        // TODO add your handling code here:
          boolean retorno = validarDados();
        if(retorno){
            
            Audiencias aud = guardarDados();
            //SALVAR NO BANCO DE DADOS
            
           AudienciasController objAudienciasController = new AudienciasController();
           
           if(lblId.getText().equals("ID")){
               String ret = objAudienciasController.incluir(aud);
               if(ret.equals("")){
                   CaixaDeDialogo.obterinstancia().exibirMensagem("AudiÃªncia incluÃ­da com sucesso");
                   limparTela();
           }else{
                   CaixaDeDialogo.obterinstancia().exibirMensagem(ret);
               }
          
        }else{
           aud.setId(Integer.parseInt(lblId.getText()));
           boolean ret = objAudienciasController.alterar(aud);
           if(ret){
               CaixaDeDialogo.obterinstancia().exibirMensagem("AudiÃªncia alterada com sucesso");
               limparTela();
           }else{
                CaixaDeDialogo.obterinstancia().exibirMensagem("Erro ao alterar audiÃªncia");
           }
        }
        }
        
        atualizarTabela();
    }//GEN-LAST:event_jblSalvarActionPerformed

    private void jtbAudienciasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbAudienciasMousePressed
        // TODO add your handling code here:
         try {
            //pega a linha selecionada
            int linhaSelecionada = jtbAudiencias.getSelectedRow();

            // Primeira coluna da linha
            String codigo = jtbAudiencias.getModel().getValueAt(linhaSelecionada, 0).toString();

            //buscar no banco de dados o registro e preencher nos campos da tela
           AudienciasController objAudienciasController = new AudienciasController();
            Audiencias objeto = objAudienciasController.buscar(codigo);
                
            //Verifica se clicou na coluna 2 => EXCLUIR
            if (jtbAudiencias.isColumnSelected(2)) {
                try {
                    boolean wPergunta = CaixaDeDialogo.obterinstancia()
                            .pedirConfirmacao("Tem certeza de que deseja excluir?", "", 'p');
                    if (wPergunta == true) {
                        //exclusÃ£o do registro selecionado
                        objAudienciasController = new AudienciasController();
                        boolean retorno = objAudienciasController.excluir(codigo);
                        if(retorno){
                            CaixaDeDialogo.obterinstancia().exibirMensagem("Registro excluÃ­do com sucesso");
                            atualizarTabela();
                        }else{
                            CaixaDeDialogo.obterinstancia().exibirMensagem("Erro ao excluir");
                        }
                    }                    

                } catch (Exception ex) {
                    CaixaDeDialogo.obterinstancia().exibirMensagem("Erro: " + ex.getMessage());
                }
            } else {
                if (objeto != null) {
                    preencherCampos(objeto);
                }
            }


        } catch (Exception ex) {
            CaixaDeDialogo.obterinstancia().exibirMensagem(ex.getMessage(), 'e');
        }
        
        
        
    }//GEN-LAST:event_jtbAudienciasMousePressed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        lblId.setText("ID");
        //txtNome.setText("");
        jcbProcesso.setSelectedIndex(0);
        jcbEvento.setSelectedIndex(0);
        jcbSala.setSelectedIndex(0);
        jcbStatus.setSelectedIndex(0);
        atualizarTabela();
    }//GEN-LAST:event_btnLimparActionPerformed

    
    private void limparTela(){
        lblId.setText("ID");
        //txtNome.setText("");;
        jcbProcesso.setSelectedIndex(0);
        jcbEvento.setSelectedIndex(0);
        jcbSala.setSelectedIndex(0);
        jcbStatus.setSelectedIndex(0);
        atualizarTabela();
    }
    
    private boolean validarDados(){
     /*   if(txtNome.getText().trim().equals("")){ 
            CaixaDeDialogo.obterinstancia().exibirMensagem("Informe uma cidade");
            return false;
        }
        */
      
     
     
     
     if(jcbProcesso.getSelectedIndex() <= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Escolha um processo");
            return false;
        }
     
     if(jcbEvento.getSelectedIndex() <= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Escolha um evento");
            return false;
        }
     
     if(jcbSala.getSelectedIndex() <= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Escolha uma sala");
            return false;
        }
     
     if(jcbStatus.getSelectedIndex() <= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Escolha um status");
            return false;
        }
      
        return true;
    }
    
    private Audiencias guardarDados(){
        try{
            Audiencias objeto = new Audiencias();
            
           Date data = new SimpleDateFormat("dd/MM/yyyy").parse(jftData.getText());
           
           String data_formatada = new SimpleDateFormat("yyyy-MM-dd").format(data);
           
           objeto.setData(data_formatada);

            
            
            Combo c = (Combo) jcbProcesso.getSelectedItem();
            int cod_process = Integer.parseInt(c.getCodigo());
            objeto.setId_processo(cod_process);
            
            Combo a = (Combo) jcbEvento.getSelectedItem();
            int cod_ev = Integer.parseInt(a.getCodigo());
            objeto.setId_evento(cod_ev);
            
            Combo b = (Combo) jcbSala.getSelectedItem();
            int cod_sal = Integer.parseInt(b.getCodigo());
            objeto.setId_sala(cod_sal);
            
            Combo d = (Combo) jcbStatus.getSelectedItem();
            int cod_status = Integer.parseInt(d.getCodigo());
            objeto.setId_status(cod_status);
            
            return objeto;
            
        }catch(Exception ex){
            return null;
        }
    }
    
      private void preencherCampos(Audiencias objeto){
        try{
            
            lblId.setText(String.valueOf(objeto.getId()));
            
           if(objeto.getData() != null){
           Date data = new SimpleDateFormat("yyyy-MM-dd").parse(objeto.getData());
           
           String data_formatada = new SimpleDateFormat("dd/MM/yyyy").format(data);
           
           jftData.setText(data_formatada);
            
        }
            comboProcesso.setaComboBox(String.valueOf(objeto.getId_processo()));
            comboEvento.setaComboBox(String.valueOf(objeto.getId_evento()));
            comboStatus.setaComboBox(String.valueOf(objeto.getId_status()));
            comboSala.setaComboBox(String.valueOf(objeto.getId_sala()));
            
        }catch(Exception ex){
            CaixaDeDialogo.obterinstancia().exibirMensagem(ex.getMessage(), 'e');
        }
    }
      
      private void atualizarTabela() {
        try {
           AudienciasController objAudienciasController = new AudienciasController();
            objAudienciasController.preencher(jtbAudiencias);

        } catch (Exception ex) {
            CaixaDeDialogo.obterinstancia().exibirMensagem("ERRO:" + ex.getMessage());
        }
    }
      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAudiencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAudiencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAudiencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAudiencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

       //CUSTOMIZAR TEMA
        try{
            UIManager.setLookAndFeel(new FlatDarculaLaf());
        }catch(Exception ex){
            System.out.println("ERRO NA TROCA DE TEMA");
        }
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAudiencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jblSalvar;
    private javax.swing.JComboBox<String> jcbEvento;
    private javax.swing.JComboBox<String> jcbProcesso;
    private javax.swing.JComboBox<String> jcbSala;
    private javax.swing.JComboBox<String> jcbStatus;
    private javax.swing.JFormattedTextField jftData;
    private javax.swing.JTable jtbAudiencias;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lblId;
    // End of variables declaration//GEN-END:variables

    private Object SimpleDateFormat(String yyyyMMdd) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
